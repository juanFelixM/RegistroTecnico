@page "/Sistemas/Edit/{SistemaId:int}"
@inject SistemasServices sistemasServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar Sistema</PageTitle>

@if (!mostrarConfirmacion)
{
    <EditForm Model="Sistema" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="container">
            <div class="card shadow-lg">
                <div class="card-header text-center bg-primary text-white">
                    <h5 class="card-title"><strong>Editar Sistema</strong></h5>
                </div>

                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label"><strong>Sistema ID</strong></label>
                        <InputNumber class="form-control" @bind-Value="Sistema.SistemaId" readonly />
                    </div>

                    <div class="mb-3">
                        <label class="form-label"><strong>Descripción</strong></label>
                        <InputText class="form-control" @bind-Value="Sistema.Descripcion" />
                        <ValidationMessage For="() => Sistema.Descripcion" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label"><strong>Complejidad</strong></label>
                        <InputNumber class="form-control" @bind-Value="Sistema.Complejidad" />
                        <ValidationMessage For="() => Sistema.Complejidad" />
                    </div>

                    <div class="card-footer text-center mt-2">
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-outline-danger bi bi-trash" @onclick="MostrarConfirmacion">
                                Eliminar
                            </button>
                            <button type="submit" class="btn btn-outline-success bi bi-floppy"> Guardar</button>
                            <a href="/Sistemas/Index" class="btn btn-outline-secondary">
                                <span class="bi bi-arrow-left"></span> Volver
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}
else
{
    <EditForm Model="Sistema" OnValidSubmit="Eliminar">
        <div class="container">
            <div class="card shadow-lg">
                <div class="card-header text-center bg-danger text-white">
                    <h5 class="card-title"><strong>Confirmar Eliminación</strong></h5>
                </div>

                <div class="card-body">
                    <p class="text-center">¿Estás seguro de que deseas eliminar el siguiente sistema?</p>

                    <div class="mb-3">
                        <label><strong>ID:</strong> @Sistema.SistemaId</label>
                    </div>
                    <div class="mb-3">
                        <label><strong>Descripción:</strong> @Sistema.Descripcion</label>
                    </div>
                    <div class="mb-3">
                        <label><strong>Complejidad:</strong> @Sistema.Complejidad</label>
                    </div>
                </div>

                <div class="card-footer text-center">
                    <div class="btn-group" role="group">
                        <button type="submit" class="btn btn-outline-danger bi bi-trash"> Confirmar</button>
                        <button type="button" class="btn btn-outline-secondary" @onclick="CancelarEliminacion">
                            <span class="bi bi-arrow-left"></span> Cancelar
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int SistemaId { get; set; }

    public Sistemas Sistema { get; set; } = new();
    private bool mostrarConfirmacion = false;

    protected override async Task OnInitializedAsync()
    {
        var buscado = await sistemasServices.Buscar(SistemaId);
        if (buscado != null)
            Sistema = buscado;
    }

    private async Task Guardar()
    {
        if (string.IsNullOrWhiteSpace(Sistema.Descripcion))
            return;

        await sistemasServices.Guardar(Sistema);
        navigationManager.NavigateTo("/Sistemas/Index");
    }

    private void MostrarConfirmacion()
    {
        mostrarConfirmacion = true;
    }

    private void CancelarEliminacion()
    {
        mostrarConfirmacion = false;
    }

    private async Task Eliminar()
    {
        await sistemasServices.Eliminar(Sistema.SistemaId);
        navigationManager.NavigateTo("/Sistemas/Index");
    }
}
